"""Initial migration.

Revision ID: 25bc41b33ce8
Revises: 
Create Date: 2023-01-12 23:25:53.337681

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '25bc41b33ce8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('label', sa.Enum('STANDARD', 'PRIVILEGED', 'ADMIN', 'TEST', name='roletype'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('password', sa.String(length=400), nullable=False),
    sa.Column('is_notificate', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('accounthistory',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id', 'created'),
    sa.UniqueConstraint('id', 'created'),
    postgresql_partition_by='RANGE (created)'
    )
    op.create_table('socialaccount',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('social_id', sa.Text(), nullable=False),
    sa.Column('social_name', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('social_id', 'social_name', name='social_pk')
    )
    op.execute(
        """CREATE TABLE IF NOT EXISTS "account_history_2022" PARTITION OF "accounthistory" FOR VALUES FROM ('2022-1-1 00:00:00') TO ('2023-1-1 00:00:00')"""
    )
    op.execute(
        """CREATE TABLE IF NOT EXISTS "account_history_2023" PARTITION OF "accounthistory" FOR VALUES FROM ('2023-1-1 00:00:00') TO ('2024-1-1 00:00:00')"""
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('socialaccount')
    op.drop_table('accounthistory')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
