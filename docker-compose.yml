version: '3'
services:
  ### Auth service
  auth_service:
    container_name: auth_service
    build:
      context: auth-flask-solution/
      dockerfile: Dockerfile
    depends_on:
      - main_redis
      - main_elastic
    env_file:
      - .env
    restart: always

  auth_redis:
    container_name: auth_redis
    image: redis
    volumes:
      - auth_redisdata:/data
    restart: always

  auth_postgres:
    container_name: auth_postgres
    image: postgres:13
    environment:
      POSTGRES_USER: ${AUTH_POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_POSTGRES_DB_NAME}
    volumes:
      - auth_pgdata:/var/lib/postgresql/data


  ### Main service
  main_api_service:
    container_name: main_api_service
    build:
      context: fastapi-solution/
      dockerfile: Dockerfile
    depends_on:
      - main_redis
      - main_elastic
    env_file:
      - .env
    restart: always

  main_elastic:
    container_name: main_elastic
    image: elasticsearch:7.17.5
    environment:
      ES_JAVA_OPTS: "-Xms200m -Xmx200m"
      discovery.type: single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data

  main_redis:
    container_name: main_redis
    image: redis
    volumes:
      - main_redisdata:/data
    restart: always

  main_postgres:
    container_name: main_postgres
    image: postgres:13
    environment:
      POSTGRES_USER: ${MAIN_POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${MAIN_POSTGRES_DB_PASSWORD}
      POSTGRES_DB: ${MAIN_POSTGRES_DB_NAME}
    volumes:
      - main_pgdata:/var/lib/postgresql/data

  ### ETL
  etl_genres:
    container_name: etl_genres
    image: lizatish/etl:genres_v2.0
    depends_on:
      - main_postgres
      - main_elastic
    environment:
      POSTGRES_DB_USER: ${MAIN_POSTGRES_DB_USER}
      POSTGRES_DB_NAME: ${MAIN_POSTGRES_DB_NAME}
      POSTGRES_DB_PASSWORD: ${MAIN_POSTGRES_DB_PASSWORD}
      POSTGRES_DB_HOST: ${MAIN_POSTGRES_DB_HOST}
      ELASTIC_HOST: ${MAIN_ELASTIC_HOST}

  etl_persons:
    container_name: etl_persons
    image: lizatish/etl:persons_v2.0
    depends_on:
      - main_postgres
      - main_elastic
    environment:
      POSTGRES_DB_USER: ${MAIN_POSTGRES_DB_USER}
      POSTGRES_DB_NAME: ${MAIN_POSTGRES_DB_NAME}
      POSTGRES_DB_PASSWORD: ${MAIN_POSTGRES_DB_PASSWORD}
      POSTGRES_DB_HOST: ${MAIN_POSTGRES_DB_HOST}
      ELASTIC_HOST: ${MAIN_ELASTIC_HOST}

  etl_fw:
    container_name: etl_fw
    image: lizatish/etl:fw_v2.0
    depends_on:
      - main_postgres
      - main_elastic
    environment:
      POSTGRES_DB_USER: ${MAIN_POSTGRES_DB_USER}
      POSTGRES_DB_NAME: ${MAIN_POSTGRES_DB_NAME}
      POSTGRES_DB_PASSWORD: ${MAIN_POSTGRES_DB_PASSWORD}
      POSTGRES_DB_HOST: ${MAIN_POSTGRES_DB_HOST}
      ELASTIC_HOST: ${MAIN_ELASTIC_HOST}

  # Deploy
  nginx:
    container_name: nginx
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth_service
      - main_api_service
volumes:
  esdata:
  auth_pgdata:
  auth_redisdata:
  main_redisdata:
  main_pgdata: